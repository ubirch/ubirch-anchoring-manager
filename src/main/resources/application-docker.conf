include "application.base.conf"

anchoringManager {

  dispatching{
    file = ${ANCH_MNGR_DISP_FILE}
  }
  name = ${ANCH_MNGR_NAME}

  kafkaConsumer {
    //Comma-separeted values of IP/Hostname and ports
    bootstrapServers = ${ANCH_MNGR_KFC_NODES}
    import = ${ANCH_MNGR_KFC_TOPIC}
    //If empty, a group id will be created.
    groupId = ${ANCH_MNGR_KFC_GROUP}
    gracefulTimeout = ${ANCH_MNGR_KFC_GRACEFUL_TIMEOUT} //In Seconds
    maxPollRecords = ${ANCH_MNGR_KFC_POOL_RECORDS}
    metricsSubNamespace = ${ANCH_MNGR_KFC_METRICS_NAMESPACE}
    fetchMaxBytesConfig = ${ANCH_MNGR_KFC_FETCH_MAX_BYTES_CONFIG}
    maxPartitionFetchBytesConfig = ${ANCH_MNGR_KFC_MAX_PARTITION_FETCH_BYTES_CONFIG}
    reconnectBackoffMsConfig = ${ANCH_MNGR_KFC_RECONNECT_BACKOFF_MS_CONFIG}
    reconnectBackoffMaxMsConfig = ${ANCH_MNGR_KFC_RECONNECT_BACKOFF_MAX_MS_CONFIG}
  }

  kafkaProducer {
    lingerMS = ${ANCH_MNGR_KFP_LINGER_MS}
    //Comma-separeted vaANCH_MNGRes of IP/Hostname and ports
    bootstrapServers = ${ANCH_MNGR_KFP_NODES}
    errorTopic = ${ANCH_MNGR_KFP_ERROR_TOPIC}

  }

  metrics {
    prometheus {
      port = ${ANCH_MNGR_PROM_HTTP_PORT}
    }
  }

  executionContext {
    threadPoolSize = ${ANCH_MNGR_EXEC_THREAD_POOL_SIZE}
  }

}
